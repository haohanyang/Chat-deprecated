@using Chat.Areas.WebPage.Models;
@model RegisterViewModel;
@{
    ViewData["Title"] = "Register";
}

@section Header {
    @await Html.PartialAsync("_HeaderPartial.cshtml", new HeaderViewModel() { LoggedInUser = Model.LoggedInUser })
}

@section Scripts {
    <script>
        $("document").ready(function () {
            let fields = ["first-name", "last-name", "email", "username", "password"];
            fields.forEach((field) => {
                if ($("#register-" + field + "-input-feedback").text().trim() != "") {
                    $("#register-" + field + "-input").addClass("is-invalid");
                }
            })
        });
    </script>
}

<main role="main" class="container">
    <form asp-area="WebPage" asp-controller="Auth" asp-action="Register" method="post" class="form-auth border rounded">
        <div class="text-center">
            <img class="mb-4" src="https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg" alt="" width="72"
                height="72">
        </div>

        <h1 class="h3 mb-3 font-weight-normal text-center">Register</h1>

        <div class="container row justify-content-between">
            <div class="col-12 col-sm-6">
                <label for="register-first-name-input" class="form-label">First name</label>
                <input asp-for="FirstName" type="text" class="form-control" id="register-first-name-input"
                    aria-describedby="register-first-name-input-feedback" required>
                <span asp-validation-for="FirstName" id="register-first-name-input-feedback" class="invalid-feedback">
                </span>
            </div>

            <div class="col-12 col-sm-6 pr-0">
                <label for="register-last-name-input" class="form-label">Last name</label>
                <input asp-for="LastName" type="text" class="form-control" id="register-last-name-input"
                    aria-describedby="register-last-name-input-feedback" required>
                <span asp-validation-for="LastName" id="register-last-name-input-feedback" class="invalid-feedback">
                </span>
            </div>
        </div>

        <div class="container">
            <label for="register-email-input" class="form-label">Email</label>
            <input asp-for="Email" type="email" class="form-control" id="register-email-input"
                aria-describedby="register-email-input-feedback" required>
            <span asp-validation-for="Email" id="register-email-input-feedback" class="invalid-feedback">
            </span>
        </div>

        <div class="container">
            <label for="register-username-input" class="form-label">Username</label>
            <input asp-for="Username" type="text" class="form-control" id="register-username-input"
                aria-describedby="register-username-input-feedback" required>
            <span asp-validation-for="Username" id="register-username-input-feedback" class="invalid-feedback">
            </span>
        </div>

        <div class="container">
            <label for="register-password-input" class="form-label">Password</label>
            <input asp-for="Password" type="password" class="form-control" id="register-password-input"
                aria-describedby="register-password-input-feedback" required>
            <span asp-validation-for="Password" id="register-password-input-feedback" class="invalid-feedback">
            </span>
        </div>

        <div class="container">
            Already have an account ? <a asp-area="WebPage" asp-controller="Auth" asp-action="Login">Login</a>
        </div>

        <div class="container text-center pt-2 pb-2">
            <input type="submit" class="btn btn-outline-primary register-button" value="Register" />
        </div>

        @if (Model.Errors.Count > 0)
        {
            <div class="container pt-2">
                <div class="alert alert-danger" role="alert">
                    @if (Model.Errors.Count == 1)
                    {
                        @Model.Errors[0]
                    }
                    else
                    {
                        <ul>
                            @foreach (var error in Model.Errors)
                            {
                                <li>@error</li>
                            }
                        </ul>
                    }
                </div>
            </div>
        }
    </form>
</main>