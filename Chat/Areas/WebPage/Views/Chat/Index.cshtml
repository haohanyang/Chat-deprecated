@using Chat.Areas.WebPage.Models;
@model ChatViewModel;

@{
    ViewData["Title"] = "Chat";
}

@section Header {
@await Html.PartialAsync("_HeaderPartial.cshtml", new HeaderViewModel() { CurrentUser = Model.CurrentUser })
}

@section Scripts {
@if (Model.CurrentUser != null)
{
<script src="_framework/blazor.webassembly.js"></script>
}
<script src="https://cdn.jsdelivr.net/npm/emoji-mart@latest/dist/browser.js"></script>
<script>
    const popoverTriggerList = document.querySelectorAll('#gg')
    const popoverList = [...popoverTriggerList].map(popoverTriggerEl => new bootstrap.Popover(popoverTriggerEl))

    const pickerOptions = { onEmojiSelect: console.log }
    const picker = new EmojiMart.Picker(pickerOptions)

    window.AddEmojiPopover = (element) => {
        const popover = new bootstrap.Popover(element, {
            html: true,
            content: picker
        })
    }
    window.ScrollDownToChatBottom = () => {
        $(".chat-message-box").scrollTop($(".chat-message-box").prop("scrollHeight"));
    }
</script>
}

@if (Model.CurrentUser != null)
{
    <main id="chat" role="main" class="container">
    <div class="spinner-border loading-progress" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</main>
}
else
{
    <main role="main" class="container">
    <div class="alert alert-danger" role="alert">
        You haven't logged in
    </div>
</main>
}
